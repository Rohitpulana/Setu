<h1>🏢 Practice Master</h1>
<div class="dashboard-header-left">
      <a href="/upload-practice-master">📤 Upload Practices</a>
</div>
<!-- Search & Pagination Bar -->
<form id="topControls" class="search-bar" style="margin-bottom: 20px; display: flex; gap: 10px; align-items: center;">
  
  <input type="text" id="searchInput" placeholder="🔍 Search practices..." style="padding: 12px; font-size: 15px; border-radius: 10px; border: 1px solid #ccc; width: 250px;" />

  <label for="rowsPerPage" style="font-weight: 600;">Show:</label>
  <select id="rowsPerPage" style="padding: 10px; font-size: 15px; border-radius: 10px; border: 1px solid #ccc; width: 100px;">
    <option value="all" selected>All</option>
    <option value="5">5</option>
    <option value="10">10</option>
    <option value="15">15</option>
    <option value="25">25</option>
  </select>

  <a href="#" id="addProjectBtn" style="margin-left: auto; text-decoration: none; font-size: 15px;">➕ Add Practice</a>

</form>

<div class="table-container">
  <table>
    <thead>
      <tr>
        <th>SW Practice</th>
        <th>Practice Manager</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% if (practices.length === 0) { %>
        <tr>
          <td colspan="3" style="text-align: center;">No practice records found.</td>
        </tr>
      <% } else { %>
        <% practices.forEach((practice, idx) => { %>
          <tr data-idx="<%= idx %>" data-id="<%= practice._id %>">
            <td><%= practice.practiceName %></td>
            <td><%= practice.practiceManager %></td>
            <td class="actions">
              <a href="#" class="edit-btn" data-idx="<%= idx %>">✏ Edit</a>
              <form method="POST" action="/practice-master/delete/<%= practice._id %>" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this practice?');">
                <button type="submit">🗑 Delete</button>
              </form>
            </td>
          </tr>
        <% }) %>
      <% } %>
    </tbody>
  </table>
</div>

<!-- Add/Edit Practice Modal -->
<div id="practiceModal" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(0,0,0,0.3); align-items:center; justify-content:center; z-index:1000;">
  <div style="background:#fff; padding:24px; border-radius:8px; min-width:300px; position:relative;">
    <h3 id="modalTitle">Add Practice</h3>
    <form id="practiceForm" method="POST" action="/practice-master/add">
      <input type="hidden" name="_id" id="practiceId">
      <div style="margin-bottom:12px;">
        <label>Practice Name:</label><br>
        <input type="text" name="practiceName" id="practiceName" required style="width:100%;">
      </div>
      <div style="margin-bottom:12px;">
        <label>Practice Manager:</label><br>
        <input type="text" name="practiceManager" id="practiceManager" required style="width:100%;">
      </div>
      <div style="text-align:right;">
        <button type="button" id="cancelModalBtn" style="margin-right:8px;">Cancel</button>
        <button type="submit" id="savePracticeBtn">Save</button>
      </div>
    </form>
  </div>
</div>

<script>
  const searchInput = document.getElementById('searchInput');
  const rowsPerPageSelector = document.getElementById('rowsPerPage');
  let currentPage = 1;
  let rowsPerPage = rowsPerPageSelector.value === 'all' ? 'all' : parseInt(rowsPerPageSelector.value);

  function renderTable() {
    const filter = searchInput.value.toLowerCase();
    const table = document.querySelector('.table-container table');
    const allRows = Array.from(table.querySelectorAll('tbody tr'));
    const dataRows = allRows.filter(row => row.querySelectorAll('td').length > 1);

    const filteredRows = dataRows.filter(row => {
      const cells = row.querySelectorAll('td');
      const text = Array.from(cells).map(td => td.textContent.toLowerCase()).join(' ');
      return text.includes(filter);
    });

    dataRows.forEach(row => row.style.display = 'none');

    let paginatedRows = filteredRows;
    rowsPerPage = rowsPerPageSelector.value === 'all' ? 'all' : parseInt(rowsPerPageSelector.value);
    const totalPages = rowsPerPage === 'all' ? 1 : Math.ceil(filteredRows.length / rowsPerPage);
    if (currentPage > totalPages) currentPage = totalPages;

    if (rowsPerPage !== 'all') {
      const startIdx = (currentPage - 1) * rowsPerPage;
      const endIdx = startIdx + rowsPerPage;
      paginatedRows = filteredRows.slice(startIdx, endIdx);
    }

    paginatedRows.forEach(row => row.style.display = '');

    const noRecordsRow = allRows.find(row => row.querySelectorAll('td').length === 1);
    if (filteredRows.length === 0 && noRecordsRow) {
      noRecordsRow.style.display = '';
    } else if (noRecordsRow) {
      noRecordsRow.style.display = 'none';
    }
  }

  const addBtn = document.getElementById('addPracticeBtn');
  const modal = document.getElementById('practiceModal');
  const cancelModalBtn = document.getElementById('cancelModalBtn');
  const practiceForm = document.getElementById('practiceForm');
  const modalTitle = document.getElementById('modalTitle');
  const practiceIdInput = document.getElementById('practiceId');
  const practiceNameInput = document.getElementById('practiceName');
  const practiceManagerInput = document.getElementById('practiceManager');

  addBtn.onclick = function() {
    modalTitle.textContent = 'Add Practice';
    practiceForm.action = '/practice-master/add';
    practiceIdInput.value = '';
    practiceNameInput.value = '';
    practiceManagerInput.value = '';
    modal.style.display = 'flex';
  };

  cancelModalBtn.onclick = function() {
    modal.style.display = 'none';
  };

  function attachEditHandlers() {
    document.querySelectorAll('.edit-btn').forEach(btn => {
      btn.onclick = function() {
        const idx = btn.getAttribute('data-idx');
        const row = document.querySelector(`tr[data-idx='${idx}']`);
        const cells = row.querySelectorAll('td');
        modalTitle.textContent = 'Edit Practice';
        practiceForm.action = '/practice-master/edit';
        practiceIdInput.value = row.getAttribute('data-id');
        practiceNameInput.value = cells[0].textContent;
        practiceManagerInput.value = cells[1].textContent;
        modal.style.display = 'flex';
      };
    });
  }

  window.onclick = function(e) {
    if (e.target === modal) modal.style.display = 'none';
  };

  function renderTableWithHandlers() {
    renderTable();
    attachEditHandlers();
  }

  searchInput.addEventListener('input', () => {
    currentPage = 1;
    renderTableWithHandlers();
  });

  rowsPerPageSelector.addEventListener('change', () => {
    currentPage = 1;
    renderTableWithHandlers();
  });

  renderTableWithHandlers();
</script>
